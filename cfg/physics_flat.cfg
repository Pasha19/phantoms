# Geometric and energy sampling
# physics.energyCount = 20                    # number of energy bins
# physics.energyCount = 1
# physics.monochromatic = -1                  # -1 for polychromatic (see protocol.cfg);
                                            #     for monoenergetic specify the energy in keV
physics.monochromatic = 50
# physics.colSampleCount = 2                  # number of samples of detector cells in lateral direction
# physics.rowSampleCount = 2                  # number of samples of detector cells in longitudinal direction
physics.srcXSampleCount = 2                 # number of samples of focal spot in lateral direction
physics.srcYSampleCount = 2                 # number of samples of focal spot cells in longitudinal direction
# physics.viewSampleCount = 2                 # number of samples of each view angle range in rotational direction
# physics.srcXSampleCount = 1
# physics.srcYSampleCount = 1
physics.viewSampleCount = 1

physics.FlatPanel_OSfactor = 1
# physics.DetectorAliasMode = 1
physics.DetectorAliasMode = 0

# Flags to determine what has to be recalculated each view
physics.recalcDet = 0                       # recalculate detector geometry
physics.recalcSrc = 0                       # recalculate source geometry and relative intensity
physics.recalcRayAngle = 0                  # recalculate source-to-detector-cell ray angles
physics.recalcSpec = 0                      # recalculate spectrum
physics.recalcFilt = 0                      # recalculate filters
physics.recalcFlux = 0                      # recalculate flux
physics.recalcPht = 0                       # recalculate phantom

# Noise on/off settings
# physics.enableQuantumNoise = 1              # enable quantum noise
# physics.enableElectronicNoise = 1           # enable electronic noise
physics.enableQuantumNoise = 0              # enable quantum noise
physics.enableElectronicNoise = 0           # enable electronic noise

# Internal physics models
physics.rayAngleCallback = "Detector_RayAngles_2D" # name of function to calculate source-to-detector-cell ray angles
physics.fluxCallback = "Detection_Flux"     # name of function to calculate flux
physics.scatterCallback = ""                # name of function to calculate scatter
physics.scatterKernelCallback = ""          # name of function to calculate scatter kernel ("" for default kernel)
physics.scatterScaleFactor = 1              # scale factor, 1 appropriate for 64-mm detector and 20-cm water
physics.prefilterCallback = "Detection_prefilter" # name of function to calculate detection pre-filter
physics.crosstalkCallback = ""              # name of function to calculate X-ray crosstalk in the detector
physics.lagCallback = ""                    # name of function to calculate detector lag
#physics.opticalCrosstalkCallback = "Detection_OpticalCrosstalk_FlatPanel"       # name of function to calculate optical crosstalk in the detector
physics.opticalCrosstalkCallback = ""
physics.DASCallback = "Detection_DAS_FlatPanel"       # name of function to calculate the detection process

# I/O preferences
physics.outputCallback = "My_WriteRawView"     # name of function to produce the simulation output
physics.dump_period = 100 # dump data every 100 views
